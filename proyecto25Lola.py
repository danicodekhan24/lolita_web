import streamlit as st
import pandas as pd
import numpy as np
import os
from datetime import datetime
from PIL import Image # ¬°A√±ade esta l√≠nea!

# --- CONFIGURACI√ìN GENERAL ---
st.set_page_config(
    page_title="Amigos de LoLa",
    page_icon="üêæüê∂",
    layout="wide"
)

# --- RUTAS DE ARCHIVOS CSV ---
CSV_HISTORIAS = "historias_peluditos.csv"
CSV_COMENTARIOS_PERROS = "comentarios_articulos_perros.csv"
CSV_COMENTARIOS_GATOS = "comentarios_articulos_gatos.csv"


# --- FUNCIONES DE ALMACENAMIENTO ---
# ... (tus importaciones y otras funciones como save_comment_to_csv, save_story_to_csv si las tienes) ...

# --- Funciones para Comentarios de NotiPatitas ---
NOTIPATITAS_COMMENTS_CSV = 'notipatitas_comments.csv'

def save_notipatitas_comment_to_csv(post_id, name, comment):
    """Guarda un comentario para una publicaci√≥n espec√≠fica de NotiPatitas en un CSV."""
    df = pd.DataFrame([[post_id, name, comment, datetime.now().strftime("%Y-%m-%d %H:%M:%S")]],
                      columns=['post_id', 'Nombre', 'Comentario', 'Fecha'])
    if not os.path.isfile(NOTIPATITAS_COMMENTS_CSV):
        df.to_csv(NOTIPATITAS_COMMENTS_CSV, index=False)
    else:
        df.to_csv(NOTIPATITAS_COMMENTS_CSV, mode='a', header=False, index=False)

def load_notipatitas_comments_from_csv(post_id=None):
    """Carga los comentarios de NotiPatitas desde un CSV, opcionalmente filtrando por post_id."""
    if os.path.isfile(NOTIPATITAS_COMMENTS_CSV):
        df = pd.read_csv(NOTIPATITAS_COMMENTS_CSV)
        if post_id:
            return df[df['post_id'] == post_id]
        return df
    return pd.DataFrame(columns=['post_id', 'Nombre', 'Comentario', 'Fecha'])

# ... (el resto de tu script) ...
def save_story_to_csv(nombre, email, mensaje):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    new_story_df = pd.DataFrame([{"Fecha": timestamp, "Nombre": nombre, "Email": email, "Mensaje": mensaje}])

    if os.path.exists(CSV_HISTORIAS):
        existing_df = pd.read_csv(CSV_HISTORIAS)
        updated_df = pd.concat([existing_df, new_story_df], ignore_index=True)
    else:
        updated_df = new_story_df

    updated_df.to_csv(CSV_HISTORIAS, index=False)
    st.success("¬°Tu historia ha sido guardada con √©xito!")

def save_comment_to_csv(csv_file_path, nombre, email, comentario):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    new_comment_df = pd.DataFrame([{"Fecha": timestamp, "Nombre": nombre, "Email": email, "Comentario": comentario}])

    if os.path.exists(csv_file_path):
        existing_df = pd.read_csv(csv_file_path)
        updated_df = pd.concat([existing_df, new_comment_df], ignore_index=True)
    else:
        updated_df = new_comment_df

    updated_df.to_csv(csv_file_path, index=False)
    st.success("¬°Tu comentario ha sido guardado!")


# --- BARRA LATERAL PARA NAVEGACI√ìN ---

st.sidebar.markdown("<h1 style='color: #F9B872;'>Men√∫ Principal üêæ</h1>", unsafe_allow_html=True) # Cambiado a Naranja vibrante (#FFA500)
st.sidebar.markdown("---")
st.sidebar.markdown("<h3 style='color: #5C4033;'>Explora el sitio:</h3>", unsafe_allow_html=True) # Cambiado a Caf√©/Marr√≥n (#5C4033)

# Estos botones de la barra lateral ahora tambi√©n controlar√°n la secci√≥n_activa
if st.sidebar.button("Inicio üè†", key="sb_inicio"):
    st.session_state.seccion_activa = "inicio"
if st.sidebar.button("Conoce a Lola üê∂", key="sb_conoce_lola_sb"):
    st.session_state.seccion_activa = "conoce_lola"
if st.sidebar.button("Notipaticasüêæ", key="sb_nuiestros_amigos_sb"):
    st.session_state.seccion_activa = "nuestros_amigos"
if st.sidebar.button("Conoce nuestros peluditos üêïüêà", key="sb_manada_peluditos_sb"):
    st.session_state.seccion_activa = "manada_peluditos"
if st.sidebar.button("Cuidado de Mascotas ü©∫", key="sb_cuidado_mascotas_sb"):
    st.session_state.seccion_activa = "cuidado_mascotas"
if st.sidebar.button("Art√≠culos Interesantes üìñ", key="sb_articulos_sb"):
    st.session_state.seccion_activa = "articulos"
if st.sidebar.button("Comparte tu Historia üíå", key="sb_comparte_historia_sb"):
    st.session_state.seccion_activa = "comparte_historia"
if st.sidebar.button("Ver Historias Recibidas üåü", key="sb_ver_historias_sb"):
    st.session_state.seccion_activa = "ver_historias"

# --- SECCI√ìN: BARRA LATERAL (AUTOR DEL SITIO) ---
with st.sidebar:
    
    st.markdown("<h3 style='color: #F9B872;'>‚úçÔ∏è Autor del Sitio</h3>", unsafe_allow_html=True) # Cambiado a Naranja Suave (#F9B872)
    # Aqu√≠ puedes a√±adir tu foto. Aseg√∫rate de que la ruta sea correcta.
    # Si tu foto se llama 'foto_autor.jpeg' y est√° en la misma carpeta:
    author_photo_path = "dic2024.jpg" # ¬°CAMBIA ESTO POR LA RUTA REAL DE TU FOTO!

    try:
        author_photo = Image.open(author_photo_path)
        # Centrar la imagen en la barra lateral usando columnas
        col_img1, col_img2, col_img3 = st.columns([0.5, 2, 0.5]) # Ajusta las proporciones
        with col_img2:
            st.image(author_photo, width=120) # Ajusta el 'width' para el tama√±o de la foto

    except FileNotFoundError:
        st.warning(f"No se encontr√≥ la imagen del autor en: {author_photo_path}")
    except Exception as e:
        st.error(f"Error al cargar la imagen del autor: {e}")

    # Expander para la descripci√≥n biogr√°fica
    with st.expander("Danilo Alava"):
        st.write("""
        ¬°Hola! Soy Danii, el creador detr√°s de "Amigos de LoLa".
        Mi pasi√≥n por los animales, especialmente por los perros y gatos,
        me impuls√≥ a crear este espacio para compartir informaci√≥n,
        historias y recursos que promuevan el cuidado y bienestar de nuestras mascotas.
        Espero que disfrutes explorando y aprendiendo con nosotros.
        ¬°Gracias por visitar!
        """)
        # Puedes a√±adir m√°s informaci√≥n aqu√≠ si lo deseas:
        # st.write("Puedes contactarme en: tu_email@ejemplo.com")
# --- CONTENIDO PRINCIPAL ---
st.markdown("<h1 style='text-align: center; color: #FFA500;'>üêæ Amigos de Lola üêæ</h1>", unsafe_allow_html=True) # Naranja est√°nda  
# --- A√±ade estas dos l√≠neas para tu logo ---
# --- INICIO DEL C√ìDIGO MODIFICADO PARA EL LOGO ---
logo_path = "Lolit.jpg" # Aseg√∫rate de que esta ruta sea correcta para tu logo

# Creamos 3 columnas: una vac√≠a a la izquierda, una para el logo, una vac√≠a a la derecha
# Ajusta los n√∫meros [1, 1, 1] si quieres m√°s espacio a los lados, por ejemplo [2, 1, 2]
col1, col2, col3 = st.columns([2, 1, 2])

with col2: # Colocamos el logo en la columna central
    st.image(logo_path, width=125) # Reducimos el 'width' al 50% de 250, que es 125.
# --- FIN DEL C√ìDIGO MODIFICADO PARA EL LOGO ---
st.markdown("<h2 style='text-align: center; color: #F9B872;'>Un lugar para crear conciencia en el cuidado de nuestros peluditos</h2>", unsafe_allow_html=True) # Naranja muy p√°lido


st.markdown("<h3 style='text-align: center; color: #FAF5E9;'>Descubre consejos, historias y mucho m√°s sobre perros y gatos.</h3>", unsafe_allow_html=True) # Marfil




# --- MENSAJE DE BIENVENIDA ESTILIZADO Y BOTONES DE NAVEGACI√ìN PRINCIPAL ---
st.markdown("---")
# Nuevo mensaje de bienvenida
# --- MENSAJE DE BIENVENIDA ESTILIZADO Y BOTONES DE NAVEGACI√ìN PRINCIPAL ---
st.markdown("---")
st.markdown("<h3 style='text-align: center; color: #F9B872; font-family: sans-serif;'>üê∂ Bienvenidos üê±</h3>", unsafe_allow_html=True) # Naranja medio

st.markdown("<h4 style='text-align: center; color: #FAF5E9;'>Explora las categor√≠as principales:</h4>", unsafe_allow_html=True) # Marfil

# Inicializar la secci√≥n_activa si no existe
if "seccion_activa" not in st.session_state:
    st.session_state.seccion_activa = "inicio" # Puedes elegir qu√© secci√≥n se muestra al inicio



# Botones de navegaci√≥n al inicio
col_nav1, col_nav2, col_nav3, col_nav4, col_nav5 = st.columns(5) # Ahora 5 columnas

with col_nav1:
    if st.button("üê∂ Conoce a Lola", use_container_width=True):
        st.session_state.seccion_activa = "conoce_lola"
with col_nav2:
    if st.button("üêæ La Manada ", use_container_width=True):
        st.session_state.seccion_activa = "manada_peluditos"
with col_nav3:  
    if st.button("üìñ Art√≠culos Interesantes", use_container_width=True):
        st.session_state.seccion_activa = "articulos"
with col_nav4:
    if st.button("üíå Historias ", use_container_width=True):
        st.session_state.seccion_activa = "comparte_historia" # Ir√° a la secci√≥n de compartir historia
with col_nav5: # NUEVO BOT√ìN
    if st.button("üåü Eventos Destacados", use_container_width=True):
        st.session_state.seccion_activa = "eventos_destacados" # Nueva clave de sesi√≥n

st.markdown("---")

# ... (tus importaciones y logo_path, etc. aqu√≠) ...

# --- DATOS DE NOTIPATITAS ---
# Lista para almacenar las noticias/eventos de NotiPatitas
# Cada diccionario representa una publicaci√≥n con su imagen, t√≠tulo y descripci√≥n.
# Aseg√∫rate de que las rutas de las im√°genes sean correctas (por ejemplo, 'img/mural.png')
noti_patitas_data = [
    {
        "id": "manada_semana_1", # ID √∫nico para enlazar comentarios
        "titulo": "üêæ La Manada de la Semana: ¬°Nuestros Peque√±os H√©roes! üêæ",
        "imagen": "ManadaBlue.jpg", # CAMBIA ESTO: Ruta de tu foto de la manada
        "descripcion": """
        Esta semana, queremos presentarles a la incre√≠ble manada que ha llenado de alegr√≠a
        nuestros corazones. Son un ejemplo de amistad y resiliencia. Conoce a Blue,
        Hanna, Roma , Brisa y Sacha. Estos peluditos se integran en las tardes para disfrutar
        de un paseo y recreacion. ¬°Su energ√≠a es contagiosa!
        """
    },
    {
        "id": "aviso_rifa_1", # ID √∫nico
        "titulo": "üéâ ¬°Gran Rifa Solidaria por Nuestros Peluditos! üéâ",
        "imagen": "notipatitas.png", # CAMBIA ESTO: Ruta de tu foto de la rifa
        "descripcion": """
        ¬°Participa en nuestra rifa solidaria y ayuda a los peluditos en necesidad!
        Tenemos premios incre√≠bles. Cada boleta es un ladrillo m√°s en la construcci√≥n
        de un futuro mejor para ellos. ¬°No te quedes sin la tuya! M√°s informaci√≥n
        sobre c√≥mo participar y los premios en juego.
        """
    },
    {
        "id": "mascota_perdida_1", # ID √∫nico
        "titulo": "üö® ¬°Ay√∫danos a Encontrar a Luna! Perra Perdida en [Tu Ciudad/Barrio] üö®",
        "imagen": "Luna.jpg", # CAMBIA ESTO: Ruta de la foto de la mascota perdida
        "descripcion": """
        Luna, una [raza/descripci√≥n], se perdi√≥ el [fecha] cerca de [lugar].
        Es muy amigable y [caracter√≠sticas distintivas]. Si la has visto o tienes
        alguna informaci√≥n, por favor cont√°ctanos al [n√∫mero de contacto].
        ¬°Su familia la extra√±a mucho!
        """
    },
    {
        "id": "denuncia_maltrato_1", # ID √∫nico
        "titulo": "‚öñÔ∏è ¬°No al Maltrato Animal! Unidos por la Justicia ‚öñÔ∏è",
        "imagen": "mural de encabezado.png", # CAMBIA ESTO: Imagen que ilustre la campa√±a (NO fotos expl√≠citas de maltrato)
        "descripcion": """
        Recientemente, hemos recibido un reporte preocupante sobre un caso de maltrato
        animal en [ubicaci√≥n general, si es relevante y seguro]. Queremos recordarles
        la importancia de denunciar y actuar. Si eres testigo de maltrato,
        contacta a las autoridades locales o a organizaciones de protecci√≥n animal.
        ¬°Su voz es la nuestra!
        """
    }
]

# ... (el resto de tu script) ...

# --- Renderizado Condicional de Secciones ---
# Solo se muestra la secci√≥n activa
if st.session_state.seccion_activa == "inicio":
    # Centramos y coloreamos el texto de bienvenida
    st.markdown("<p style='text-align: center; color: #FAE7A5; font-size: 20px;'>Selecciona una opci√≥n de arriba o desde el men√∫ lateral para empezar a explorar.</p>", unsafe_allow_html=True)

    # Centramos la imagen de inicio y ajustamos el tama√±o
    imagen_inicio_path = "mural de encabezado.png" # Aseg√∫rate de que esta ruta sea correcta
    try:
        col_img_inicio1, col_img_inicio2, col_img_inicio3 = st.columns([1, 2, 1]) # Ajusta proporciones para centrar
        with col_img_inicio2:
            st.image(imagen_inicio_path, caption="üêæüîä¬°Mural de noti paticas!üé¨üêæ", width=400) # Ajusta el 'width'
    except FileNotFoundError:
        st.warning(f"La imagen '{imagen_inicio_path}' para la secci√≥n de inicio no se encontr√≥.")
        # Opci√≥n alternativa si la imagen no se encuentra
        col_img_inicio1, col_img_inicio2, col_img_inicio3 = st.columns([1 , 2, 1])
        with col_img_inicio2:
            st.image("https://placehold.co/400x300/99775C/EAE7DD?text=Mural+No+Encontrado",
                     caption="Imagen no encontrada", width=50)
    except Exception as e:
        st.error(f"Error al cargar la imagen de inicio: {e}")

if st.session_state.seccion_activa == "conoce_lola":
    # --- Secci√≥n de Conoce a Lola (Expander Centrado y Estilizado) ---
    # --- Secci√≥n de Conoce a Lola ---
    st.markdown("<h2 style='text-align: center; color: #F9B872;'>Conoce a Lola üê∂</h2>", unsafe_allow_html=True) # Marr√≥n Caf√© Oscuro

    lola_imagen_path = "BEAGLE LOLI.jpg"

    col1, col2, col3 = st.columns([1, 2, 1])

    with col2:
        with st.expander("  üêæ   LA JEFA   üêæ   "):
            st.markdown("""
                <div style="text-align: center; color: #8A2BE2; font-family: 'Comic Sans MS', cursive; font-size: 2em; font-weight: bold;">
                    LOLA
                </div>
                """, unsafe_allow_html=True)
            st.markdown("---")
            try:
                st.image(lola_imagen_path, caption="  La jefa   ", use_container_width=True)
            except FileNotFoundError:
                st.error(f"Error: La imagen de Lola '{lola_imagen_path}' no se encontr√≥. Aseg√∫rate de que el archivo est√© en la misma carpeta que el script o que la ruta sea correcta.")
                st.image("https://placehold.co/600x400/FFD700/000000?text=Imagen no encontrada",
                         caption="",
                         use_container_width=True)
            st.write("Es nuestra Beagle, y la inspiraci√≥n de este sitio. Con su actitud siempre empoderada se ha ganado el apodo de alias la jefa. Es una Beagle amigable, curiosa y muy sociable, ideales para su liderasgo. Requiere bastante ejercicio y estimulaci√≥n mental para evitar que se enoje. jeje¬°¬°. Su ladrido caracter√≠stico y aullido son notables.")

if st.session_state.seccion_activa == "nuestros_amigos":
    # --- Secci√≥n de Imagen (Mural de Encabezado) ---
    # --- NUEVA SECCI√ìN: NOTIPATITAS (Publicaciones de Noticias/Eventos) ---
    st.markdown("<h2 style='text-align: center; color: #F9B872;'>üì∞ NotiPatitas: ¬°Lo √öltimo de Nuestra Manada! üêæ</h2>", unsafe_allow_html=True)

# Iterar sobre los datos de NotiPatitas para mostrar cada publicaci√≥n
for post in noti_patitas_data:
    with st.expander(f"‚ú® {post['titulo']}"): # T√≠tulo de la publicaci√≥n en el expander
        # Centrar la imagen dentro del expander
        col_img_np1, col_img_np2, col_img_np3 = st.columns([1, 4, 1]) # Ajusta si necesitas m√°s espacio
        with col_img_np2:
            try:
                # Cargar imagen usando PIL.Image.open si necesitas m√°s control o si es JPG
                # Si es PNG y siempre el mismo nombre, st.image(post['imagen']) tambi√©n sirve
                st.image(post['imagen'], caption=post['titulo'], use_container_width=True)
            except FileNotFoundError:
                st.error(f"Error: La imagen '{post['imagen']}' para '{post['titulo']}' no se encontr√≥.")
                st.image("https://placehold.co/600x400/99775C/EAE7DD?text=Imagen+No+Encontrada",
                                 caption="Imagen no encontrada",
                                 use_container_width=True)
            except Exception as e:
                st.error(f"Error al cargar la imagen para '{post['titulo']}': {e}")

        st.markdown(post['descripcion'])
        st.write("---") # Separador visual

        st.markdown(f"#### Comentarios sobre '{post['titulo']}'")
        comments_df = load_notipatitas_comments_from_csv(post_id=post['id'])
        if not comments_df.empty:
            # Mostrar los comentarios, puedes ajustar el formato
            for index, row in comments_df.iterrows():
                st.markdown(f"**{row['Nombre']}** ({row['Fecha']}): {row['Comentario']}")
        else:
            st.info("S√© el primero en comentar esta publicaci√≥n.")

        # Formulario para agregar un comentario
        with st.form(key=f"comment_form_{post['id']}"): # Key √∫nico para cada formulario de comentario
            comment_name = st.text_input("Tu Nombre", key=f"comment_name_{post['id']}")
            comment_text = st.text_area("Tu Comentario", key=f"comment_text_{post['id']}")
            comment_submit = st.form_submit_button("Enviar Comentario")

            if comment_submit:
                if comment_name and comment_text:
                    save_notipatitas_comment_to_csv(post['id'], comment_name, comment_text)
                    st.success("¬°Gracias por tu comentario!")
                    st.rerun() # Para recargar los comentarios
                else:
                    st.warning("Por favor, ingresa tu nombre y un comentario.")
        st.write("---") # Separador al final de cada expander

if st.session_state.seccion_activa == "manada_peluditos":
    # --- NUEVA SECCI√ìN: Cualidades de la Manada de Perros (Interactiva) ---
    st.markdown("<h2 style='text-align: center; color: #F9B872;'>üêæ Nuestra Manadaüêæ </h2>", unsafe_allow_html=True) # Marr√≥n Caf√© Oscuro

    st.write("Haz clic en el nombre de cada perrito para ver su foto y sus cualidades.")

    manada_perros = [
        {
            "nombre": "ROMA",
            "imagen": "Romijul.jpg",
            "cualidades": "ROMA es una Sabueso (Bloodhound) muy curiosa por su olfato insuperable. Su temperamento con la gente es  sereno y analitico , le encanta jugar con sus amigos y siempre est√° lista para un reto. Es muy leal y protectora con su manada."
        },
        {
            "nombre": "TIGRE y Filipa",
            "imagen": "tigre_filip.jpg",
            "cualidades": "Tigre y Filipa representan una gran manada que pronto conoceran ¬°¬° Tigre es el m√°s tranquilo y comelon ¬°¬° de la manada y Filipa prefiere dominar y ser la  consentidad de sus humanos. Su curiosidad se refleja en su mirada."
        },
        {
            "nombre": "LOLA",
            "imagen": "lolitexplorer.jpg",
            "cualidades": "LOLA es la Beagle con el  olfato excepcionalmente m√°s desarrollado. Siempre busca nuevas exploraciones con su manada y es incre√≠blemente terca ¬°¬° jeje. Su energ√≠a es contagiosa."
        }
    ]

    num_columnas = 3
    i = 0
    while i < len(manada_perros):
        cols = st.columns(num_columnas)
        for j in range(num_columnas):
            if i + j < len(manada_perros):
                perro = manada_perros[i + j]
                with cols[j]:
                    with st.expander(f"**{perro['nombre']}**"):
                        try:
                            st.image(perro['imagen'], caption=f"¬°{perro['nombre']}!", use_container_width=True)
                        except FileNotFoundError:
                            st.warning(f"La imagen para {perro['nombre']} ('{perro['imagen']}') no se encontr√≥. Aseg√∫rate de que el archivo est√© en la misma carpeta.")
                            st.image("https://placehold.co/400x300/FF0000/FFFFFF?text=Imagen no encontrada",
                                     caption=f"Imagen de {perro['nombre']} no encontrada",
                                     use_container_width=True)
                        st.write(perro['cualidades'])
        i += num_columnas

if st.session_state.seccion_activa == "cuidado_mascotas":
    # --- SECCI√ìN: Informaci√≥n Esencial para el Cuidado de tu Mascota ---
    st.markdown("<h2 style='text-align: center; color: #F9B872;'>Informaci√≥n Esencial para el Cuidado de tu Mascota</h2>", unsafe_allow_html=True) # Marr√≥n Caf√© Oscuro

    tab_perros, tab_gatos = st.tabs(["üê∂ Perros", "üê± Gatos"])

    with tab_perros:
        st.subheader("Recomendaciones b√°sicas")
        with st.expander("Salud Canina"):
            st.write("""
            - **Vacunaci√≥n:** Mant√©n al d√≠a el calendario de vacunas (parvovirus, moquillo, rabia, etc.).
            - **Desparasitaci√≥n:** Regularmente contra par√°sitos internos y externos.
            - **Visitas al veterinario:** Chequeos anuales y ante cualquier s√≠ntoma inusual.
            - **Alimentaci√≥n:** Dieta balanceada y adecuada a su edad, raza y nivel de actividad.
            """)
        with st.expander("Bienestar Canino"):
            st.write("""
            - **Ejercicio:** Paseos diarios y juegos para liberar energ√≠a y mantenerlos en forma.
            - **Socializaci√≥n:** Exposici√≥n temprana a personas, otros perros y entornos.
            - **Entrenamiento:** Refuerzo positivo para obediencia b√°sica y trucos.
            - **Espacio:** Un lugar c√≥modo y seguro para descansar.
            """)
        with st.expander("Cuidados b√°sicos"):
            st.write("""
            - **Higiene:** Ba√±os regulares, cepillado de pelo, limpieza de orejas y corte de u√±as.
            - **Identificaci√≥n:** Microchip y placa con datos de contacto.
            - **Hidrataci√≥n:** Agua fresca y limpia siempre disponible.
            """)

    with tab_gatos:
        st.subheader("Recomendaciones")
        with st.expander("Salud Felina"):
            st.write("""
            - **Vacunaci√≥n:** Protege contra enfermedades como la panleucopenia, rinotraque√≠tis, calicivirus y rabia.
            - **Desparasitaci√≥n:** Esencial incluso para gatos de interior.
            - **Visitas al veterinario:** Chequeos peri√≥dicos y atenci√≥n a cambios en el comportamiento.
            - **Alimentaci√≥n:** Piensos de calidad, adaptados a su edad y si es esterilizado.
            """)
        with st.expander("Bienestar Felino"):
            st.write("""
            - **Enriquecimiento ambiental:** Rascadores, juguetes, espacios elevados para trepar.
            - **Juego:** Interacciones diarias para estimular su mente y cuerpo.
            - **Privacidad:** Lugares tranquilos para esconderse y descansar.
            - **Limpieza:** Arenero siempre limpio para evitar problemas de comportamiento.
            """)
        with st.expander("Cuidados B√°sicos "):
            st.write("""
            - **Higiene:** Cepillado regular, especialmente en razas de pelo largo.
            - **Hidrataci√≥n:** Agua fresca y limpia, considera fuentes de agua para estimular el consumo.
            - **Identificaci√≥n:** Microchip, incluso para gatos de interior.
            """)

if st.session_state.seccion_activa == "articulos":
    # --- SECCI√ìN: ART√çCULOS INTERESANTES ---
    st.markdown("<h2 style='text-align: center; color: #F9B872;'>üìñ Art√≠culos Interesantes sobre Mascotas üêæ</h2>", unsafe_allow_html=True) # Marr√≥n Caf√© Oscuro


    st.write("Explora nuestros art√≠culos y aprende m√°s sobre el cuidado y bienestar de tus compa√±eros peludos.")

    tab_articulos_perros, tab_articulos_gatos = st.tabs(["üê∂ Art√≠culos para Perros", "üê± Art√≠culos para Gatos"])

    with tab_articulos_perros:
        st.subheader("Art√≠culos Dedicados a Nuestros Amigos Caninos")

        # Art√≠culo 1 para perros
        with st.expander("üê∂ Gu√≠a Completa de Alimentaci√≥n para Perros"):
            st.write("""
            Una dieta balanceada es crucial para la salud de tu perro. Aprende sobre los tipos de alimentos, las porciones adecuadas seg√∫n la edad y el tama√±o, y qu√© ingredientes debes evitar.
            """)
            with open("guia_alimentacion_perros.pdf", "rb") as file:
                st.download_button(
                    label="Descargar Gu√≠a de Alimentaci√≥n (PDF)",
                    data=file,
                    file_name="guia_alimentacion_perros.pdf",
                    mime="application/pdf"
                )
            st.markdown("---")
            st.subheader("Comentarios sobre este art√≠culo:")
            with st.form("comentarios_guia_perros"):
                nombre_c = st.text_input("Tu Nombre", key="nombre_c_perros_1")
                email_c = st.text_input("Tu Correo Electr√≥nico", key="email_c_perros_1")
                comentario_c = st.text_area("Tu Comentario", key="comentario_c_perros_1")
                submitted_c = st.form_submit_button("Enviar Comentario")
                if submitted_c:
                    if nombre_c and email_c and comentario_c:
                        save_comment_to_csv(CSV_COMENTARIOS_PERROS, nombre_c, email_c, comentario_c)
                    else:
                        st.error("Por favor, completa todos los campos para enviar tu comentario.")
            st.markdown("#### Comentarios Anteriores:")
            if os.path.exists(CSV_COMENTARIOS_PERROS):
                df_comentarios = pd.read_csv(CSV_COMENTARIOS_PERROS)
                if not df_comentarios.empty:
                    for index, row in df_comentarios.iterrows():
                        st.markdown(f"**{row['Nombre']}** ({row['Fecha']}): {row['Comentario']}")
                        st.markdown("---")
                else:
                    st.info("A√∫n no hay comentarios para este art√≠culo.")
            else:
                st.info("S√© el primero en comentar este art√≠culo.")


        # Art√≠culo 2 para perros (ejemplo)
        with st.expander("üê∂ Entrenamiento Positivo para Cachorros"):
            st.write("""
            Descubre los principios del entrenamiento con refuerzo positivo para cachorros. Establece una base s√≥lida de obediencia y crea un v√≠nculo fuerte con tu nuevo compa√±ero.
            """)
            with open("entrenamiento_cachorros.pdf", "rb") as file:
                st.download_button(
                    label="Descargar Gu√≠a de Entrenamiento (PDF)",
                    data=file,
                    file_name="entrenamiento_cachorros.pdf",
                    mime="application/pdf"
                )
            st.markdown("---")
            st.subheader("Comentarios sobre este art√≠culo:")
            with st.form("comentarios_entrenamiento_perros"):
                nombre_c = st.text_input("Tu Nombre", key="nombre_c_perros_2")
                email_c = st.text_input("Tu Correo Electr√≥nico", key="email_c_perros_2")
                comentario_c = st.text_area("Tu Comentario", key="comentario_c_perros_2")
                submitted_c = st.form_submit_button("Enviar Comentario")
                if submitted_c:
                    if nombre_c and email_c and comentario_c:
                        save_comment_to_csv(CSV_COMENTARIOS_PERROS, nombre_c, email_c, comentario_c)
                    else:
                        st.error("Por favor, completa todos los campos para enviar tu comentario.")
            st.markdown("#### Comentarios Anteriores:")
            if os.path.exists(CSV_COMENTARIOS_PERROS):
                df_comentarios = pd.read_csv(CSV_COMENTARIOS_PERROS)
                if not df_comentarios.empty:
                    for index, row in df_comentarios.iterrows():
                        st.markdown(f"**{row['Nombre']}** ({row['Fecha']}): {row['Comentario']}")
                        st.markdown("---")
                else:
                    st.info("A√∫n no hay comentarios para este art√≠culo.")
            else:
                st.info("S√© el primero en comentar este art√≠culo.")


    with tab_articulos_gatos:
        st.subheader("Art√≠culos para Nuestros Amigos Felinos")

        # Art√≠culo 1 para gatos
        with st.expander("üê± Comprendiendo el Comportamiento Felino"):
            st.write("""
            Los gatos son criaturas fascinantes. Entiende sus se√±ales, su necesidad de rascado y su comportamiento social para mejorar la convivencia en casa.
            """)
            with open("comportamiento_felino.pdf", "rb") as file:
                st.download_button(
                    label="Descargar Art√≠culo (PDF)",
                    data=file,
                    file_name="comportamiento_felino.pdf",
                    mime="application/pdf"
                )
            st.markdown("---")
            st.subheader("Comentarios sobre este art√≠culo:")
            with st.form("comentarios_comportamiento_gatos"):
                nombre_c = st.text_input("Tu Nombre", key="nombre_c_gatos_1")
                email_c = st.text_input("Tu Correo Electr√≥nico", key="email_c_gatos_1")
                comentario_c = st.text_area("Tu Comentario", key="comentario_c_gatos_1")
                submitted_c = st.form_submit_button("Enviar Comentario")
                if submitted_c:
                    if nombre_c and email_c and comentario_c:
                        save_comment_to_csv(CSV_COMENTARIOS_GATOS, nombre_c, email_c, comentario_c)
                    else:
                        st.error("Por favor, completa todos los campos para enviar tu comentario.")
            st.markdown("#### Comentarios Anteriores:")
            if os.path.exists(CSV_COMENTARIOS_GATOS):
                df_comentarios = pd.read_csv(CSV_COMENTARIOS_GATOS)
                if not df_comentarios.empty:
                    for index, row in df_comentarios.iterrows():
                        st.markdown(f"**{row['Nombre']}** ({row['Fecha']}): {row['Comentario']}")
                        st.markdown("---")
                else:
                    st.info("A√∫n no hay comentarios para este art√≠culo.")
            else:
                st.info("S√© el primero en comentar este art√≠culo.")

if st.session_state.seccion_activa == "comparte_historia":
    # --- SECCI√ìN: Formulario para Compartir Historia ---
    st.markdown("<h2 style='text-align: center; color: #F9B872;'>¬°Queremos escuchar tu historia!</h2>", unsafe_allow_html=True) # Marr√≥n Caf√© Oscuro



    st.write("¬øTienes alguna historia de tu peludito que quieras compartir o alguna pregunta?")

    with st.form("contact_form"):
        nombre = st.text_input("Tu Nombre")
        email = st.text_input("Tu Correo Electr√≥nico")
        mensaje = st.text_area("Tu Mensaje o Historia")

        submitted = st.form_submit_button("Enviar Historia")
        if submitted:
            if nombre and email and mensaje:
                save_story_to_csv(nombre, email, mensaje)
            else:
                st.error("Por favor, completa todos los campos para enviar tu mensaje.")

if st.session_state.seccion_activa == "ver_historias":
    # --- SECCI√ìN: Ver Historias Recibidas desde CSV ---
    st.markdown("<h2 style='text-align: center; color: #F9B872;'>Historias de Nuestros Peluditos</h2>", unsafe_allow_html=True) # Marr√≥n Caf√© Oscuro
    st.write("Aqu√≠ puedes ver las historias que nuestros visitantes han compartido.")

    if os.path.exists(CSV_HISTORIAS):
        try:
            df_historias = pd.read_csv(CSV_HISTORIAS)
            if not df_historias.empty:
                for index, row in df_historias.iloc[::-1].iterrows():
                    st.markdown(f"**Nombre:** {row['Nombre']}")
                    st.markdown(f"**Correo:** {row['Email']}")
                    st.markdown(f"**Fecha de Env√≠o:** {row['Fecha']}")
                    st.write(f"**Historia:** {row['Mensaje']}")
                    st.markdown("---")
            else:
                st.info("A√∫n no hay historias compartidas. ¬°S√© el primero!")
        except Exception as e:
            st.error(f"Error al leer las historias: {e}")
    else:
        st.info("A√∫n no se ha creado el archivo de historias. ¬°Env√≠a una historia para empezar!")

        # --- PIE DE P√ÅGINA (DERECHOS DE AUTOR) ---
st.markdown("---") # Una l√≠nea divisoria antes del pie de p√°gina
st.markdown(
    "<p style='text-align: center; color: #8C8C8C; font-size: small;'>¬© 2025 Amigos de LoLa. Todos los derechos reservados.</p>",
    unsafe_allow_html=True
)
# Puedes ajustar el color y el tama√±o de la fuente si lo deseas